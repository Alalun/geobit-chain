package io.geobit.chain.api;

import io.geobit.chain.dispatchers.BalanceAndReceivedDispatchers;
import io.geobit.common.btc.Validator;

import java.util.Date;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.CacheControl;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.Response.Status;

@Path("/btc/v1/balance")
public class BalanceAPI {
	
	
		
		
	@GET
	@Path("/{address}")
	@Produces({MediaType.TEXT_PLAIN}) 
	public Response balance(@PathParam("address") String address) {
		if(!Validator.isValidAddress(address))
			return Response.status(Status.BAD_REQUEST).build();
		BalanceAndReceivedDispatchers disp = BalanceAndReceivedDispatchers.getInstance();
		Long ret=disp.getBalance(address);
		CacheControl control = new CacheControl();
		control.setMaxAge( 10 );
		control.setNoTransform(false);
		
		return Response
				.ok(ret.toString())
				.cacheControl(control)
				.lastModified( new Date() )
				.build();
	}

}
